/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class virgil_crypto_phe_PheJNI */

#ifndef _Included_virgil_crypto_phe_PheJNI
#define _Included_virgil_crypto_phe_PheJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    errorCtx_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_virgil_crypto_phe_PheJNI_errorCtx_1new
  (JNIEnv *, jobject);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    errorCtx_reset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_virgil_crypto_phe_PheJNI_errorCtx_1reset
  (JNIEnv *, jobject, jlong);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    errorCtx_error
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_virgil_crypto_phe_PheJNI_errorCtx_1error
  (JNIEnv *, jobject, jlong);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheServer_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_virgil_crypto_phe_PheJNI_pheServer_1new
  (JNIEnv *, jobject);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheServer_generateServerKeyPair
 * Signature: (J)Lvirgil/crypto/phe/PheServerGenerateServerKeyPairResult;
 */
JNIEXPORT jobject JNICALL Java_virgil_crypto_phe_PheJNI_pheServer_1generateServerKeyPair
  (JNIEnv *, jobject, jlong);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheServer_enrollmentResponseLen
 * Signature: (J)Ljava/lang/Integer;
 */
JNIEXPORT jobject JNICALL Java_virgil_crypto_phe_PheJNI_pheServer_1enrollmentResponseLen
  (JNIEnv *, jobject, jlong);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheServer_getEnrollment
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_virgil_crypto_phe_PheJNI_pheServer_1getEnrollment
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheServer_verifyPasswordResponseLen
 * Signature: (J)Ljava/lang/Integer;
 */
JNIEXPORT jobject JNICALL Java_virgil_crypto_phe_PheJNI_pheServer_1verifyPasswordResponseLen
  (JNIEnv *, jobject, jlong);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheServer_verifyPassword
 * Signature: (J[B[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_virgil_crypto_phe_PheJNI_pheServer_1verifyPassword
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheServer_updateTokenLen
 * Signature: (J)Ljava/lang/Integer;
 */
JNIEXPORT jobject JNICALL Java_virgil_crypto_phe_PheJNI_pheServer_1updateTokenLen
  (JNIEnv *, jobject, jlong);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheServer_rotateKeys
 * Signature: (J[B)Lvirgil/crypto/phe/PheServerRotateKeysResult;
 */
JNIEXPORT jobject JNICALL Java_virgil_crypto_phe_PheJNI_pheServer_1rotateKeys
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_new
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1new
  (JNIEnv *, jobject);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_setKeys
 * Signature: (J[B[B)V
 */
JNIEXPORT void JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1setKeys
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_generateClientPrivateKey
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1generateClientPrivateKey
  (JNIEnv *, jobject, jlong);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_enrollmentRecordLen
 * Signature: (J)Ljava/lang/Integer;
 */
JNIEXPORT jobject JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1enrollmentRecordLen
  (JNIEnv *, jobject, jlong);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_enrollAccount
 * Signature: (J[B[B)Lvirgil/crypto/phe/PheClientEnrollAccountResult;
 */
JNIEXPORT jobject JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1enrollAccount
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_verifyPasswordRequestLen
 * Signature: (J)Ljava/lang/Integer;
 */
JNIEXPORT jobject JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1verifyPasswordRequestLen
  (JNIEnv *, jobject, jlong);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_createVerifyPasswordRequest
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1createVerifyPasswordRequest
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_checkResponseAndDecrypt
 * Signature: (J[B[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1checkResponseAndDecrypt
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_rotateKeys
 * Signature: (J[B)Lvirgil/crypto/phe/PheClientRotateKeysResult;
 */
JNIEXPORT jobject JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1rotateKeys
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     virgil_crypto_phe_PheJNI
 * Method:    pheClient_updateEnrollmentRecord
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_virgil_crypto_phe_PheJNI_pheClient_1updateEnrollmentRecord
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
