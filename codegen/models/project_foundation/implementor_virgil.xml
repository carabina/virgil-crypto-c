<implementor name="virgil" is_default="1">
    Provide implementation based on the Virgil Security implementations.

    <implementation name="hmac">
        Virgil Security implementation of HMAC algorithm (RFC 2104) (FIPS PUB 198-1).

        <dependency name="hash" interface="hash stream"/>

        <context>
            <property name="ipad" class="buffer" access="readwrite"/>
        </context>

        <interface name="mac info"/>
        <interface name="mac"/>
        <interface name="mac stream"/>
    </implementation>


    <implementation name="hkdf">
        Virgil Security implementation of the HKDF (RFC 6234) algorithm.

        <interface name="salted kdf"/>

        <dependency name="hash" interface="hash stream"/>

        <context>
            <property name="hmac" impl="hmac" access="readwrite" is_reference="0" require_definition="public"/>
        </context>

        <constant name="hash counter max" value="255"/>

        <method name="extract" context="impl">
            Extracts fixed-length pseudorandom key from keying material.

            <argument name="data" class="data"/>
            <argument name="salt" class="data"/>
            <argument name="pr key" class="buffer"/>
        </method>

        <method name="expand" context="impl">
            Expands the pseudorandom key to the desired length.

            <argument name="pr key" class="buffer"/>
            <argument name="info" class="data"/>
            <argument name="key" class="buffer"/>
            <argument name="key len" type="size"/>
        </method>
    </implementation>


    <implementation name="kdf1">
        Virgil Security implementation of the KDF1 (ISO-18033-2) algorithm.

        <interface name="kdf"/>

        <interface name="alg info compatible"/>

        <require enum="alg id"/>

        <require impl="simple alg info"/>

        <require impl="kdf alg info"/>

        <require interface="hash info"/>

        <dependency name="hash" interface="hash stream"/>
    </implementation>


    <implementation name="kdf2">
        Virgil Security implementation of the KDF2 (ISO-18033-2) algorithm.

        <interface name="kdf"/>

        <dependency name="hash" interface="hash stream"/>
    </implementation>


    <implementation name="fake random">
        Random number generator that is used for test purposes only.


        <interface name="random"/>
        <interface name="entropy source"/>


        <context>
            <property name="data source" class="data" access="readwrite"/>
            <property name="byte source" type="byte"/>
            <property name="pos" type="size"/>
        </context>


        <method name="setup source byte" declaration="public">
            Configure random number generator to generate sequence filled with given byte.

            <argument name="byte source" type="byte"/>
        </method>


        <method name="setup source data" declaration="public">
            Configure random number generator to generate random sequence from given data.
            Note, that given data is used as circular source.

            <argument name="data source" class="data"/>
        </method>
    </implementation>

<!--
    <implementation name="dynamic_list">
        Virgil Security implementation of dynamic list.

        <interface name="list" />

    </implementation>

    <implementation name="password_recipient">
        CMS Password recipient.

        <interface name="cms" />

    </implementation>

    <implementation name="key_trans_recipient">
        CMS Key Trans Recipient.

        <interface name="cms" />

    </implementation>

    <implementation name="enveloped_data">
        CMS Enveloped Data.

        <interface name="cms" />

    </implementation>

    <implementation name="encrypted_content">
        CMS EncryptedContent.

        <interface name="cms" />

    </implementation>

    <implementation name="content">
        CMS Content.

        <interface name="cms" />

    </implementation>

    <implementation name="content_info">
        CMS Content Info.

        <interface name="cms" />

    </implementation>
-->
</implementor>
