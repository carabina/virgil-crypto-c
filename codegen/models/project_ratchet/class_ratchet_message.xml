<class name="ratchet message" context="private">

    <require class="ratchet common" scope="public"/>

    <require impl="sha512" project="foundation" scope="private"/>
    <require module="buffer defs" scope="private" project="common"/>

    <require header="RatchetMessage.pb.h" scope="context"/>
    <require header="pb_decode.h" scope="private"/>
    <require header="pb_encode.h" scope="private"/>

    <property name="message pb" class="Message" library="nanopb" access="readwrite" is_reference="0"/>

    <method name="get type">
        Returns message type.

        <return enum="msg type"/>
    </method>

    <method name="get long-term public key">
        Returns long-term public key, if message is prekey message.

        <return class="data"/>
    </method>

    <method name="get one-time public key">
        Returns one-time public key, if message is prekey message and if one-time key is present, empty result otherwise.

        <return class="data"/>
    </method>

    <method name="serialize len">
        Buffer len to serialize this class.

        <return type="size"/>
    </method>

    <method name="serialize">
        Serializes instance.

        <argument name="output" class="buffer">
            Buffer for result. Capacity should be >= serialize len.

            <length method="serialize len"/>
        </argument>
    </method>

    <method name="deserialize" is_static="1">
        Deserializes instance.

        <argument name="input" class="data">
            Data with serialized instance.
        </argument>
        <argument name="err ctx" class="error ctx" access="readwrite">
            Error context.
        </argument>

        <return class="self" access="disown"/>
    </method>

    <method name="set pb encode callback" declaration="private">
    </method>

    <method name="set pb decode callback" declaration="private">
    </method>
</class>
